"""Add org_id to mail_folders table

Revision ID: 35111bfc22bf
Revises: 6b5bd3218908
Create Date: 2025-09-29 15:31:13.001122+09:00

SkyBoot Mail SaaS 마이그레이션 스크립트
- 다중 조직 지원
- 데이터 격리 보장
- 백업 및 복원 지원
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '35111bfc22bf'
down_revision = '6b5bd3218908'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """
    마이그레이션 업그레이드 실행
    
    이 함수는 데이터베이스 스키마를 새 버전으로 업그레이드합니다.
    SaaS 환경에서 조직별 데이터 격리를 유지하면서 안전하게 실행됩니다.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('virtual_users')
    op.drop_table('virtual_aliases')
    op.drop_table('virtual_domains')
    with op.batch_alter_table('mail_attachments', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('attachment_uuid',
               existing_type=sa.VARCHAR(length=255),
               comment='첨부파일 UUID',
               existing_nullable=False)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               comment='파일명',
               existing_nullable=False)
        batch_op.alter_column('file_path',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               nullable=False,
               comment='파일 저장 경로')
        batch_op.alter_column('file_size',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               nullable=False,
               comment='파일 크기 (bytes)')
        batch_op.alter_column('content_type',
               existing_type=sa.VARCHAR(length=100),
               comment='MIME 타입',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_index('idx_mail_attachments_mail_id')
        batch_op.create_index(batch_op.f('ix_mail_attachments_id'), ['id'], unique=False)
        batch_op.drop_constraint('mail_attachments_mail_id_fkey', type_='foreignkey')
        batch_op.drop_column('mail_id')

    with op.batch_alter_table('mail_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               comment='폴더 ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('folder_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='폴더 UUID',
               existing_nullable=True)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='사용자 UUID',
               existing_nullable=False)
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               comment='조직 ID',
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               comment='폴더명',
               existing_nullable=False)
        batch_op.alter_column('folder_type',
               existing_type=postgresql.ENUM('inbox', 'sent', 'draft', 'trash', 'custom', name='foldertype'),
               server_default=None,
               comment='폴더 타입',
               existing_nullable=True)
        batch_op.alter_column('parent_id',
               existing_type=sa.INTEGER(),
               comment='상위 폴더 ID',
               existing_nullable=True)
        batch_op.alter_column('is_system',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               comment='시스템 폴더 여부',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_mail_folders_org_id')
        batch_op.drop_index('idx_mail_folders_user_uuid')
        batch_op.create_index(batch_op.f('ix_mail_folders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mail_folders_user_uuid'), ['user_uuid'], unique=False)
        batch_op.drop_constraint('mail_folders_parent_folder_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'organizations', ['org_id'], ['org_id'])
        batch_op.create_foreign_key(None, 'mail_users', ['user_uuid'], ['user_uuid'])
        batch_op.drop_column('parent_folder_id')

    with op.batch_alter_table('mail_in_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=50),
               comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('folder_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='폴더 UUID',
               existing_nullable=False)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='사용자 UUID',
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               comment='생성 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_in_folders_folder_uuid')
        batch_op.drop_index('ix_mail_in_folders_mail_uuid')
        batch_op.create_foreign_key(None, 'mails', ['mail_uuid'], ['mail_uuid'])
        batch_op.create_foreign_key(None, 'mail_folders', ['folder_uuid'], ['folder_uuid'])
        batch_op.create_foreign_key(None, 'mail_users', ['user_uuid'], ['user_uuid'])

    with op.batch_alter_table('mail_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mail_uuid', sa.String(length=50), nullable=False, comment='메일 UUID (mails.mail_uuid 참조)'))
        batch_op.add_column(sa.Column('user_uuid', sa.String(length=36), nullable=True, comment='사용자 UUID'))
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP 주소'))
        batch_op.add_column(sa.Column('user_agent', sa.String(length=500), nullable=True, comment='사용자 에이전트'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=50),
               comment='수행된 작업',
               existing_nullable=False)
        batch_op.alter_column('details',
               existing_type=sa.TEXT(),
               comment='상세 내용',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_index('idx_mail_logs_mail_id')
        batch_op.create_index(batch_op.f('ix_mail_logs_id'), ['id'], unique=False)
        batch_op.drop_constraint('mail_logs_mail_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mail_users', ['user_uuid'], ['user_uuid'])
        batch_op.create_foreign_key(None, 'mails', ['mail_uuid'], ['mail_uuid'])
        batch_op.drop_column('mail_id')

    with op.batch_alter_table('mail_recipients', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('recipient_email',
               existing_type=sa.VARCHAR(length=255),
               comment='수신자 이메일 주소',
               existing_nullable=False)
        batch_op.alter_column('recipient_type',
               existing_type=postgresql.ENUM('to', 'cc', 'bcc', name='recipienttype'),
               server_default=None,
               type_=sa.String(length=10),
               comment='수신자 타입',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_index('idx_mail_recipients_email')
        batch_op.drop_index('idx_mail_recipients_mail_id')
        batch_op.create_index(batch_op.f('ix_mail_recipients_id'), ['id'], unique=False)
        batch_op.drop_constraint('mail_recipients_mail_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mails', ['mail_uuid'], ['mail_uuid'])

    with op.batch_alter_table('mail_users', schema=None) as batch_op:
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=True,
               existing_comment='사용자 UUID')
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=False,
               comment='해시된 비밀번호')
        batch_op.alter_column('auto_reply_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='자동 응답 활성화',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('storage_used_mb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='사용 중인 저장 용량(MB)',
               existing_nullable=True)

    with op.batch_alter_table('mails', schema=None) as batch_op:
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment='메일 고유 UUID',
               existing_nullable=False)
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               comment='조직 ID',
               existing_nullable=False)
        batch_op.alter_column('sender_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='발송자 UUID',
               existing_nullable=False)
        batch_op.alter_column('subject',
               existing_type=sa.VARCHAR(length=255),
               comment='메일 제목',
               existing_nullable=False)
        batch_op.alter_column('body_text',
               existing_type=sa.TEXT(),
               comment='메일 본문 (텍스트)',
               existing_nullable=True)
        batch_op.alter_column('body_html',
               existing_type=sa.TEXT(),
               comment='메일 본문 (HTML)',
               existing_nullable=True)
        batch_op.alter_column('priority',
               existing_type=postgresql.ENUM('high', 'normal', 'low', name='mailpriority'),
               server_default=None,
               type_=sa.String(length=10),
               comment='우선순위',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('draft', 'sent', 'failed', name='mailstatus'),
               server_default=None,
               type_=sa.String(length=20),
               comment='메일 상태',
               existing_nullable=True)
        batch_op.alter_column('is_draft',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               comment='임시저장 여부',
               existing_nullable=True)
        batch_op.alter_column('message_id',
               existing_type=sa.VARCHAR(length=255),
               comment='메시지 ID',
               existing_nullable=True)
        batch_op.alter_column('in_reply_to',
               existing_type=sa.VARCHAR(length=255),
               comment='답장 대상 메시지 ID',
               existing_nullable=True)
        batch_op.alter_column('references',
               existing_type=sa.TEXT(),
               comment='참조 메시지 ID들',
               existing_nullable=True)
        batch_op.alter_column('sent_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='발송 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_mails_created_at')
        batch_op.drop_index('idx_mails_org_id')
        batch_op.drop_index('idx_mails_sender_uuid')
        batch_op.drop_index('idx_mails_sent_at')
        batch_op.drop_index('idx_mails_status')
        batch_op.create_index(batch_op.f('ix_mails_mail_uuid'), ['mail_uuid'], unique=False)
        batch_op.create_foreign_key(None, 'mail_users', ['sender_uuid'], ['user_uuid'])
        batch_op.create_foreign_key(None, 'organizations', ['org_id'], ['org_id'])

    with op.batch_alter_table('organization_settings', schema=None) as batch_op:
        batch_op.alter_column('setting_type',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_comment='설정 타입 (string, number, boolean, json)',
               existing_nullable=True)
        batch_op.alter_column('is_public',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='공개 설정 여부',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_organization_settings_key')
        batch_op.drop_index('idx_organization_settings_org_id')
        batch_op.drop_index('idx_organization_settings_type')

    with op.batch_alter_table('organization_usage', schema=None) as batch_op:
        batch_op.alter_column('current_users',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='현재 사용자 수',
               existing_nullable=True)
        batch_op.alter_column('current_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='현재 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('emails_sent_today',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='오늘 발송된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_received_today',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='오늘 수신된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_sent',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='총 발송 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_received',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='총 수신 메일 수',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_organization_usage_date')
        batch_op.drop_index('idx_organization_usage_org_id')

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.alter_column('max_users',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='최대 사용자 수',
               existing_nullable=True)
        batch_op.alter_column('max_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='최대 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('max_emails_per_day',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='일일 최대 메일 발송 수',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_comment='조직 상태',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('features',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               server_default=None,
               type_=sa.Text(),
               existing_comment='활성화된 기능 목록 JSON',
               existing_nullable=True)
        batch_op.drop_index('idx_organizations_created_at')
        batch_op.drop_index('idx_organizations_domain')
        batch_op.drop_index('idx_organizations_is_active')
        batch_op.drop_index('idx_organizations_status')
        batch_op.create_index(batch_op.f('ix_organizations_org_id'), ['org_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=50),
               existing_comment='사용자 ID',
               existing_nullable=False)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=True,
               comment=None,
               existing_comment='사용자 UUID')
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=True,
               existing_comment='사용자 역할 (admin, user, viewer)')
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=True,
               existing_comment='활성 상태')
        batch_op.alter_column('is_email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=True,
               existing_comment='이메일 인증 여부')
        batch_op.drop_index('ix_users_id')
        batch_op.create_index(batch_op.f('ix_users_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """
    마이그레이션 다운그레이드 실행
    
    이 함수는 데이터베이스 스키마를 이전 버전으로 되돌립니다.
    데이터 손실을 방지하기 위해 신중하게 구현되어야 합니다.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_user_id'))
        batch_op.create_index('ix_users_id', ['user_id'], unique=False)
        batch_op.alter_column('is_email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               nullable=False,
               existing_comment='이메일 인증 여부')
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=False,
               existing_comment='활성 상태')
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'user'::character varying"),
               nullable=False,
               existing_comment='사용자 역할 (admin, user, viewer)')
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=False,
               comment='사용자 UUID')
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=36),
               existing_comment='사용자 ID',
               existing_nullable=False)

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organizations_org_id'))
        batch_op.create_index('idx_organizations_status', ['status'], unique=False)
        batch_op.create_index('idx_organizations_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_organizations_domain', ['domain'], unique=False)
        batch_op.create_index('idx_organizations_created_at', ['created_at'], unique=False)
        batch_op.alter_column('features',
               existing_type=sa.Text(),
               server_default=sa.text("'{}'::jsonb"),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_comment='활성화된 기능 목록 JSON',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'trial'::character varying"),
               existing_comment='조직 상태',
               existing_nullable=True)
        batch_op.alter_column('max_emails_per_day',
               existing_type=sa.INTEGER(),
               server_default=sa.text('1000'),
               existing_comment='일일 최대 메일 발송 수',
               existing_nullable=True)
        batch_op.alter_column('max_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('10'),
               existing_comment='최대 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('max_users',
               existing_type=sa.INTEGER(),
               server_default=sa.text('10'),
               existing_comment='최대 사용자 수',
               existing_nullable=True)

    with op.batch_alter_table('organization_usage', schema=None) as batch_op:
        batch_op.create_index('idx_organization_usage_org_id', ['org_id'], unique=False)
        batch_op.create_index('idx_organization_usage_date', ['usage_date'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('total_emails_received',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='총 수신 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_sent',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='총 발송 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_received_today',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='오늘 수신된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_sent_today',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='오늘 발송된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('current_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='현재 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('current_users',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='현재 사용자 수',
               existing_nullable=True)

    with op.batch_alter_table('organization_settings', schema=None) as batch_op:
        batch_op.create_index('idx_organization_settings_type', ['setting_type'], unique=False)
        batch_op.create_index('idx_organization_settings_org_id', ['org_id'], unique=False)
        batch_op.create_index('idx_organization_settings_key', ['setting_key'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('is_public',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='공개 설정 여부',
               existing_nullable=True)
        batch_op.alter_column('setting_type',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'string'::character varying"),
               existing_comment='설정 타입 (string, number, boolean, json)',
               existing_nullable=True)

    with op.batch_alter_table('mails', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_mails_mail_uuid'))
        batch_op.create_index('idx_mails_status', ['status'], unique=False)
        batch_op.create_index('idx_mails_sent_at', ['sent_at'], unique=False)
        batch_op.create_index('idx_mails_sender_uuid', ['sender_uuid'], unique=False)
        batch_op.create_index('idx_mails_org_id', ['org_id'], unique=False)
        batch_op.create_index('idx_mails_created_at', ['created_at'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('sent_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='발송 시간',
               existing_nullable=True)
        batch_op.alter_column('references',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='참조 메시지 ID들',
               existing_nullable=True)
        batch_op.alter_column('in_reply_to',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='답장 대상 메시지 ID',
               existing_nullable=True)
        batch_op.alter_column('message_id',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='메시지 ID',
               existing_nullable=True)
        batch_op.alter_column('is_draft',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               comment=None,
               existing_comment='임시저장 여부',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               server_default=sa.text("'draft'::mailstatus"),
               type_=postgresql.ENUM('draft', 'sent', 'failed', name='mailstatus'),
               comment=None,
               existing_comment='메일 상태',
               existing_nullable=True)
        batch_op.alter_column('priority',
               existing_type=sa.String(length=10),
               server_default=sa.text("'normal'::mailpriority"),
               type_=postgresql.ENUM('high', 'normal', 'low', name='mailpriority'),
               comment=None,
               existing_comment='우선순위',
               existing_nullable=True)
        batch_op.alter_column('body_html',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='메일 본문 (HTML)',
               existing_nullable=True)
        batch_op.alter_column('body_text',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='메일 본문 (텍스트)',
               existing_nullable=True)
        batch_op.alter_column('subject',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='메일 제목',
               existing_nullable=False)
        batch_op.alter_column('sender_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='발송자 UUID',
               existing_nullable=False)
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='조직 ID',
               existing_nullable=False)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='메일 고유 UUID',
               existing_nullable=False)

    with op.batch_alter_table('mail_users', schema=None) as batch_op:
        batch_op.alter_column('storage_used_mb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='사용 중인 저장 용량(MB)',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('auto_reply_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='자동 응답 활성화',
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               nullable=True,
               comment=None,
               existing_comment='해시된 비밀번호')
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=False,
               existing_comment='사용자 UUID')

    with op.batch_alter_table('mail_recipients', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_recipients_mail_id_fkey', 'mails', ['mail_uuid'], ['mail_uuid'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_mail_recipients_id'))
        batch_op.create_index('idx_mail_recipients_mail_id', ['mail_uuid'], unique=False)
        batch_op.create_index('idx_mail_recipients_email', ['recipient_email'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('recipient_type',
               existing_type=sa.String(length=10),
               server_default=sa.text("'to'::recipienttype"),
               type_=postgresql.ENUM('to', 'cc', 'bcc', name='recipienttype'),
               comment=None,
               existing_comment='수신자 타입',
               existing_nullable=True)
        batch_op.alter_column('recipient_email',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='수신자 이메일 주소',
               existing_nullable=False)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mail_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_logs_mail_id_fkey', 'mails', ['mail_id'], ['mail_uuid'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_mail_logs_id'))
        batch_op.create_index('idx_mail_logs_mail_id', ['mail_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('details',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='상세 내용',
               existing_nullable=True)
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='수행된 작업',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('user_agent')
        batch_op.drop_column('ip_address')
        batch_op.drop_column('user_uuid')
        batch_op.drop_column('mail_uuid')

    with op.batch_alter_table('mail_in_folders', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_mail_in_folders_mail_uuid', ['mail_uuid'], unique=False)
        batch_op.create_index('ix_mail_in_folders_folder_uuid', ['folder_uuid'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='사용자 UUID',
               existing_nullable=False)
        batch_op.alter_column('folder_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='폴더 UUID',
               existing_nullable=False)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_folders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_folder_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_folders_parent_folder_id_fkey', 'mail_folders', ['parent_folder_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_mail_folders_user_uuid'))
        batch_op.drop_index(batch_op.f('ix_mail_folders_id'))
        batch_op.create_index('idx_mail_folders_user_uuid', ['user_uuid'], unique=False)
        batch_op.create_index('idx_mail_folders_org_id', ['org_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               comment=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('is_system',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               comment=None,
               existing_comment='시스템 폴더 여부',
               existing_nullable=True)
        batch_op.alter_column('parent_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='상위 폴더 ID',
               existing_nullable=True)
        batch_op.alter_column('folder_type',
               existing_type=postgresql.ENUM('inbox', 'sent', 'draft', 'trash', 'custom', name='foldertype'),
               server_default=sa.text("'custom'::foldertype"),
               comment=None,
               existing_comment='폴더 타입',
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='폴더명',
               existing_nullable=False)
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='조직 ID',
               existing_nullable=False)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='사용자 UUID',
               existing_nullable=False)
        batch_op.alter_column('folder_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='폴더 UUID',
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='폴더 ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_attachments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('mail_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('mail_attachments_mail_id_fkey', 'mails', ['mail_id'], ['mail_uuid'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_mail_attachments_id'))
        batch_op.create_index('idx_mail_attachments_mail_id', ['mail_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='생성 시간',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('content_type',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='MIME 타입',
               existing_nullable=True)
        batch_op.alter_column('file_size',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='파일 크기 (bytes)')
        batch_op.alter_column('file_path',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               nullable=True,
               comment=None,
               existing_comment='파일 저장 경로')
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='파일명',
               existing_nullable=False)
        batch_op.alter_column('mail_uuid',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='메일 UUID (mails.mail_uuid 참조)',
               existing_nullable=False)
        batch_op.alter_column('attachment_uuid',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='첨부파일 UUID',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    op.create_table('virtual_domains',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('virtual_domains_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='virtual_domains_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('virtual_aliases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('domain_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('destination', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['virtual_domains.id'], name='virtual_aliases_domain_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='virtual_aliases_pkey')
    )
    op.create_table('virtual_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('domain_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=106), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['virtual_domains.id'], name='virtual_users_domain_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='virtual_users_pkey'),
    sa.UniqueConstraint('email', name='virtual_users_email_key')
    )
    # ### end Alembic commands ###


def validate_saas_constraints() -> None:
    """
    SaaS 제약 조건 검증
    
    마이그레이션 후 다음 사항을 확인합니다:
    - 조직별 데이터 격리 유지
    - 외래 키 제약 조건 유효성
    - 인덱스 성능 최적화
    """
    # 구현 필요시 여기에 검증 로직 추가
    pass


def backup_critical_data() -> None:
    """
    중요 데이터 백업
    
    마이그레이션 전 중요한 데이터를 백업합니다.
    조직별로 분리된 백업을 생성하여 데이터 격리를 유지합니다.
    """
    # 구현 필요시 여기에 백업 로직 추가
    pass