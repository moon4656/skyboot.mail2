"""fix_org_id_column_name

Revision ID: 6b5bd3218908
Revises: 001_initial_saas
Create Date: 2025-09-26 09:56:30.854141+09:00

SkyBoot Mail SaaS 마이그레이션 스크립트
- 다중 조직 지원
- 데이터 격리 보장
- 백업 및 복원 지원
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b5bd3218908'
down_revision = '001_initial_saas'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """
    마이그레이션 업그레이드 실행
    
    이 함수는 데이터베이스 스키마를 새 버전으로 업그레이드합니다.
    SaaS 환경에서 조직별 데이터 격리를 유지하면서 안전하게 실행됩니다.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('login_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_login_logs_created_at')
        batch_op.drop_index('idx_login_logs_email')
        batch_op.drop_index('idx_login_logs_user_uuid')
        batch_op.create_index(batch_op.f('ix_login_logs_id'), ['id'], unique=False)

    with op.batch_alter_table('mail_attachments', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               comment=None,
               existing_comment='첨부파일 고유 ID',
               existing_nullable=False)
        batch_op.alter_column('mail_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('content_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=True,
               existing_comment='콘텐츠 타입')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_attachments_id')
        batch_op.drop_index('ix_mail_attachments_mail_id')
        batch_op.drop_constraint('mail_attachments_mail_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mails', ['mail_id'], ['mail_id'])
        batch_op.drop_table_comment(
        'mail_attachments',
        existing_comment='메일 첨부파일 모델',
        schema=None
    )
        batch_op.drop_column('is_inline')

    with op.batch_alter_table('mail_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               comment='폴더 ID',
               existing_comment='폴더 고유 ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_comment='사용자 ID',
               existing_nullable=False)
        batch_op.alter_column('folder_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('INBOX', 'SENT', 'DRAFT', 'TRASH', 'CUSTOM', name='foldertype'),
               nullable=True,
               comment='폴더 타입',
               existing_comment='폴더 타입 (inbox, sent, draft, trash, custom)')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_folders_folder_uuid')
        batch_op.create_index(batch_op.f('ix_mail_folders_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint('mail_folders_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mail_users', ['user_id'], ['user_id'])
        batch_op.drop_column('folder_uuid')

    with op.batch_alter_table('mail_in_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               comment=None,
               existing_comment='관계 고유 ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('mail_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_in_folders_folder_id')
        batch_op.drop_index('ix_mail_in_folders_mail_id')
        batch_op.drop_constraint('mail_in_folders_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('mail_in_folders_mail_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mails', ['mail_id'], ['mail_id'])
        batch_op.drop_table_comment(
        'mail_in_folders',
        existing_comment='메일-폴더 관계 모델',
        schema=None
    )
        batch_op.drop_column('user_id')

    with op.batch_alter_table('mail_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_mail_logs_action')
        batch_op.drop_index('ix_mail_logs_created_at')
        batch_op.drop_index('ix_mail_logs_mail_id')
        batch_op.drop_index('ix_mail_logs_user_uuid')
        batch_op.create_index(batch_op.f('ix_mail_logs_id'), ['id'], unique=False)
        batch_op.create_foreign_key(None, 'mail_users', ['user_uuid'], ['user_uuid'])
        batch_op.create_foreign_key(None, 'mails', ['mail_id'], ['mail_id'])
        batch_op.drop_table_comment(
        'mail_logs',
        existing_comment='메일 로그 모델',
        schema=None
    )

    with op.batch_alter_table('mail_recipients', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               comment=None,
               existing_comment='수신자 고유 ID',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('mail_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('recipient_uuid',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_comment='수신자 UUID',
               existing_nullable=False)
        batch_op.alter_column('recipient_type',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('TO', 'CC', 'BCC', name='recipienttype'),
               nullable=True,
               existing_comment='수신자 타입')
        batch_op.alter_column('read_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='읽은 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_recipients_is_read')
        batch_op.drop_index('ix_mail_recipients_mail_id')
        batch_op.drop_index('ix_mail_recipients_recipient_id')
        batch_op.drop_constraint('mail_recipients_mail_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('mail_recipients_recipient_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mail_users', ['recipient_uuid'], ['user_uuid'])
        batch_op.create_foreign_key(None, 'mails', ['mail_id'], ['mail_id'])
        batch_op.drop_table_comment(
        'mail_recipients',
        existing_comment='메일 수신자 모델',
        schema=None
    )
        batch_op.drop_column('deleted_at')
        batch_op.drop_column('is_deleted')

    with op.batch_alter_table('mail_users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_comment='연결된 사용자 ID')
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               server_default=None,
               existing_comment='소속 조직 ID',
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               comment='해시된 비밀번호',
               existing_comment='암호화된 비밀번호',
               existing_nullable=False)
        batch_op.alter_column('auto_reply_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='자동 응답 활성화',
               existing_nullable=True)
        batch_op.alter_column('storage_used_mb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='사용 중인 저장 용량(MB)',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mail_users_id')
        batch_op.drop_index('ix_mail_users_organization_id')
        batch_op.drop_index('ix_mail_users_email')
        batch_op.create_index(batch_op.f('ix_mail_users_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_mail_users_user_id'), ['user_id'], unique=False)
        batch_op.drop_column('organization_id')
        batch_op.drop_column('id')

    with op.batch_alter_table('mails', schema=None) as batch_op:
        batch_op.add_column(sa.Column('org_id', sa.String(length=36), nullable=False, comment='소속 조직 ID'))
        batch_op.add_column(sa.Column('references', sa.Text(), nullable=True, comment='참조 메시지 ID들'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               comment=None,
               existing_comment='메일 고유 ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('mails_id_seq'::regclass)"))
        batch_op.alter_column('mail_id',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               comment='메일 ID (년월일_시분초_uuid)',
               existing_comment='메일 고유 ID',
               existing_nullable=True)
        batch_op.alter_column('sender_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=False,
               existing_comment='발송자 UUID')
        batch_op.alter_column('priority',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Enum('HIGH', 'NORMAL', 'LOW', name='mailpriority'),
               comment='우선순위',
               existing_comment='우선순위 (high, normal, low)',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('DRAFT', 'SENT', 'FAILED', name='mailstatus'),
               comment='메일 상태',
               existing_comment='메일 상태 (draft, sent, failed)',
               existing_nullable=True)
        batch_op.alter_column('sent_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='발송 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               type_=sa.DateTime(timezone=True),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('ix_mails_mail_uuid')
        batch_op.drop_index('ix_mails_organization_id')
        batch_op.drop_index('ix_mails_sender_uuid')
        batch_op.drop_index('ix_mails_sent_at')
        batch_op.drop_index('ix_mails_status')
        batch_op.drop_constraint('mails_mail_id_key', type_='unique')
        batch_op.drop_index('ix_mails_mail_id')
        batch_op.create_index(batch_op.f('ix_mails_mail_id'), ['mail_id'], unique=True)
        batch_op.create_unique_constraint(None, ['message_id'])
        batch_op.create_foreign_key(None, 'organizations', ['org_id'], ['org_id'])
        batch_op.drop_column('recipient_emails')
        batch_op.drop_column('bcc_emails')
        batch_op.drop_column('mail_references')
        batch_op.drop_column('reply_to')
        batch_op.drop_column('organization_id')
        batch_op.drop_column('size_bytes')
        batch_op.drop_column('mail_uuid')
        batch_op.drop_column('has_attachments')
        batch_op.drop_column('cc_emails')

    with op.batch_alter_table('organization_settings', schema=None) as batch_op:
        batch_op.alter_column('setting_type',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_comment='설정 타입 (string, number, boolean, json)',
               existing_nullable=True)
        batch_op.alter_column('is_public',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='공개 설정 여부',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_organization_settings_org_id')
        batch_op.create_index(batch_op.f('ix_organization_settings_id'), ['id'], unique=False)
        batch_op.drop_table_comment(
        'organization_settings',
        existing_comment='조직별 상세 설정',
        schema=None
    )

    with op.batch_alter_table('organization_usage', schema=None) as batch_op:
        batch_op.alter_column('current_users',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='현재 사용자 수',
               existing_nullable=True)
        batch_op.alter_column('current_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='현재 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('emails_sent_today',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='오늘 발송된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_received_today',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='오늘 수신된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_sent',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='총 발송 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_received',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='총 수신 메일 수',
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.drop_index('idx_organization_usage_date')
        batch_op.drop_index('idx_organization_usage_org_id')
        batch_op.create_index(batch_op.f('ix_organization_usage_id'), ['id'], unique=False)
        batch_op.drop_table_comment(
        'organization_usage',
        existing_comment='조직 사용량 추적',
        schema=None
    )

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.alter_column('max_users',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='최대 사용자 수',
               existing_nullable=True)
        batch_op.alter_column('max_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='최대 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('max_emails_per_day',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='일일 최대 메일 발송 수',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_comment='조직 상태',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.drop_index('idx_organizations_org_code')
        batch_op.drop_index('idx_organizations_status')
        batch_op.drop_index('idx_organizations_subdomain')
        batch_op.drop_index('ix_organizations_status')
        batch_op.drop_index('ix_organizations_subdomain')
        batch_op.drop_constraint('organizations_org_code_key', type_='unique')
        batch_op.drop_index('ix_organizations_org_code')
        batch_op.create_index(batch_op.f('ix_organizations_org_code'), ['org_code'], unique=True)
        batch_op.drop_table_comment(
        'organizations',
        existing_comment='조직/기업 모델 - SaaS의 핵심 테넌트',
        schema=None
    )

    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.alter_column('token',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('is_revoked',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.drop_index('idx_refresh_tokens_token')
        batch_op.drop_index('idx_refresh_tokens_user_uuid')
        batch_op.drop_constraint('refresh_tokens_token_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_refresh_tokens_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_refresh_tokens_token'), ['token'], unique=True)
        batch_op.create_foreign_key(None, 'users', ['user_uuid'], ['user_uuid'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               server_default=None,
               nullable=True,
               comment=None,
               existing_comment='사용자 UUID')
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_comment='사용자 역할 (admin, user, viewer)',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('is_email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='이메일 인증 여부',
               existing_nullable=True)
        batch_op.drop_index('idx_users_email')
        batch_op.drop_index('idx_users_user_id')
        batch_op.drop_index('idx_users_user_uuid')
        batch_op.drop_index('idx_users_username')
        batch_op.drop_constraint('users_user_uuid_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_user_uuid'), ['user_uuid'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)
        batch_op.create_foreign_key(None, 'organizations', ['org_id'], ['org_id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """
    마이그레이션 다운그레이드 실행
    
    이 함수는 데이터베이스 스키마를 이전 버전으로 되돌립니다.
    데이터 손실을 방지하기 위해 신중하게 구현되어야 합니다.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_user_uuid'))
        batch_op.drop_index(batch_op.f('ix_users_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint('users_user_uuid_key', ['user_uuid'])
        batch_op.create_index('idx_users_username', ['username'], unique=False)
        batch_op.create_index('idx_users_user_uuid', ['user_uuid'], unique=False)
        batch_op.create_index('idx_users_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_users_email', ['email'], unique=False)
        batch_op.alter_column('is_email_verified',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='이메일 인증 여부',
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'user'::character varying"),
               existing_comment='사용자 역할 (admin, user, viewer)',
               existing_nullable=True)
        batch_op.alter_column('user_uuid',
               existing_type=sa.VARCHAR(length=36),
               server_default=sa.text('(gen_random_uuid())::text'),
               nullable=False,
               comment='사용자 UUID')

    with op.batch_alter_table('refresh_tokens', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_refresh_tokens_token'))
        batch_op.drop_index(batch_op.f('ix_refresh_tokens_id'))
        batch_op.create_unique_constraint('refresh_tokens_token_key', ['token'])
        batch_op.create_index('idx_refresh_tokens_user_uuid', ['user_uuid'], unique=False)
        batch_op.create_index('idx_refresh_tokens_token', ['token'], unique=False)
        batch_op.alter_column('is_revoked',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
        batch_op.alter_column('token',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.create_table_comment(
        'organizations',
        '조직/기업 모델 - SaaS의 핵심 테넌트',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_index(batch_op.f('ix_organizations_org_code'))
        batch_op.create_index('ix_organizations_org_code', ['org_code'], unique=False)
        batch_op.create_unique_constraint('organizations_org_code_key', ['org_code'])
        batch_op.create_index('ix_organizations_subdomain', ['subdomain'], unique=False)
        batch_op.create_index('ix_organizations_status', ['status'], unique=False)
        batch_op.create_index('idx_organizations_subdomain', ['subdomain'], unique=False)
        batch_op.create_index('idx_organizations_status', ['status'], unique=False)
        batch_op.create_index('idx_organizations_org_code', ['org_code'], unique=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='활성 상태',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'trial'::character varying"),
               existing_comment='조직 상태',
               existing_nullable=True)
        batch_op.alter_column('max_emails_per_day',
               existing_type=sa.INTEGER(),
               server_default=sa.text('1000'),
               existing_comment='일일 최대 메일 발송 수',
               existing_nullable=True)
        batch_op.alter_column('max_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('10'),
               existing_comment='최대 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('max_users',
               existing_type=sa.INTEGER(),
               server_default=sa.text('10'),
               existing_comment='최대 사용자 수',
               existing_nullable=True)

    with op.batch_alter_table('organization_usage', schema=None) as batch_op:
        batch_op.create_table_comment(
        'organization_usage',
        '조직 사용량 추적',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_index(batch_op.f('ix_organization_usage_id'))
        batch_op.create_index('idx_organization_usage_org_id', ['org_id'], unique=False)
        batch_op.create_index('idx_organization_usage_date', ['usage_date'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('total_emails_received',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='총 수신 메일 수',
               existing_nullable=True)
        batch_op.alter_column('total_emails_sent',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='총 발송 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_received_today',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='오늘 수신된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('emails_sent_today',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='오늘 발송된 메일 수',
               existing_nullable=True)
        batch_op.alter_column('current_storage_gb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='현재 저장 용량(GB)',
               existing_nullable=True)
        batch_op.alter_column('current_users',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='현재 사용자 수',
               existing_nullable=True)

    with op.batch_alter_table('organization_settings', schema=None) as batch_op:
        batch_op.create_table_comment(
        'organization_settings',
        '조직별 상세 설정',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_index(batch_op.f('ix_organization_settings_id'))
        batch_op.create_index('idx_organization_settings_org_id', ['org_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('is_public',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='공개 설정 여부',
               existing_nullable=True)
        batch_op.alter_column('setting_type',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'string'::character varying"),
               existing_comment='설정 타입 (string, number, boolean, json)',
               existing_nullable=True)

    with op.batch_alter_table('mails', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cc_emails', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True, comment='CC 이메일 목록'))
        batch_op.add_column(sa.Column('has_attachments', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True, comment='첨부파일 존재 여부'))
        batch_op.add_column(sa.Column('mail_uuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True, comment='메일 UUID'))
        batch_op.add_column(sa.Column('size_bytes', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True, comment='메일 크기 (바이트)'))
        batch_op.add_column(sa.Column('organization_id', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True, comment='조직 ID'))
        batch_op.add_column(sa.Column('reply_to', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='답장 주소'))
        batch_op.add_column(sa.Column('mail_references', sa.TEXT(), autoincrement=False, nullable=True, comment='참조 메시지 ID들'))
        batch_op.add_column(sa.Column('bcc_emails', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True, comment='BCC 이메일 목록'))
        batch_op.add_column(sa.Column('recipient_emails', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True, comment='수신자 이메일 목록'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index(batch_op.f('ix_mails_mail_id'))
        batch_op.create_index('ix_mails_mail_id', ['mail_id'], unique=False)
        batch_op.create_unique_constraint('mails_mail_id_key', ['mail_id'])
        batch_op.create_index('ix_mails_status', ['status'], unique=False)
        batch_op.create_index('ix_mails_sent_at', ['sent_at'], unique=False)
        batch_op.create_index('ix_mails_sender_uuid', ['sender_uuid'], unique=False)
        batch_op.create_index('ix_mails_organization_id', ['organization_id'], unique=False)
        batch_op.create_index('ix_mails_mail_uuid', ['mail_uuid'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('sent_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='발송 시간',
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.Enum('DRAFT', 'SENT', 'FAILED', name='mailstatus'),
               type_=sa.VARCHAR(length=20),
               comment='메일 상태 (draft, sent, failed)',
               existing_comment='메일 상태',
               existing_nullable=True)
        batch_op.alter_column('priority',
               existing_type=sa.Enum('HIGH', 'NORMAL', 'LOW', name='mailpriority'),
               type_=sa.VARCHAR(length=10),
               comment='우선순위 (high, normal, low)',
               existing_comment='우선순위',
               existing_nullable=True)
        batch_op.alter_column('sender_uuid',
               existing_type=sa.VARCHAR(length=36),
               nullable=True,
               existing_comment='발송자 UUID')
        batch_op.alter_column('mail_id',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text('(gen_random_uuid())::text'),
               comment='메일 고유 ID',
               existing_comment='메일 ID (년월일_시분초_uuid)',
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               comment='메일 고유 ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('mails_id_seq'::regclass)"))
        batch_op.drop_column('references')
        batch_op.drop_column('org_id')

    with op.batch_alter_table('mail_users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('mail_users_id_seq'::regclass)"), autoincrement=True, nullable=False, comment='사용자 고유 ID'))
        batch_op.add_column(sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='조직 ID'))
        batch_op.drop_index(batch_op.f('ix_mail_users_user_id'))
        batch_op.drop_index(batch_op.f('ix_mail_users_email'))
        batch_op.create_index('ix_mail_users_email', ['email'], unique=False)
        batch_op.create_index('ix_mail_users_organization_id', ['organization_id'], unique=False)
        batch_op.create_index('ix_mail_users_id', ['id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('storage_used_mb',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_comment='사용 중인 저장 용량(MB)',
               existing_nullable=True)
        batch_op.alter_column('auto_reply_enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='자동 응답 활성화',
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=255),
               comment='암호화된 비밀번호',
               existing_comment='해시된 비밀번호',
               existing_nullable=False)
        batch_op.alter_column('org_id',
               existing_type=sa.VARCHAR(length=36),
               server_default=sa.text("'default-org-id'::character varying"),
               existing_comment='소속 조직 ID',
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_comment='연결된 사용자 ID')

    with op.batch_alter_table('mail_recipients', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='삭제 여부'))
        batch_op.add_column(sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='삭제 시간'))
        batch_op.create_table_comment(
        'mail_recipients',
        '메일 수신자 모델',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_recipients_recipient_id_fkey', 'mail_users', ['recipient_uuid'], ['id'])
        batch_op.create_foreign_key('mail_recipients_mail_id_fkey', 'mails', ['mail_id'], ['id'])
        batch_op.create_index('ix_mail_recipients_recipient_id', ['recipient_uuid'], unique=False)
        batch_op.create_index('ix_mail_recipients_mail_id', ['mail_id'], unique=False)
        batch_op.create_index('ix_mail_recipients_is_read', ['is_read'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('read_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_comment='읽은 시간',
               existing_nullable=True)
        batch_op.alter_column('recipient_type',
               existing_type=sa.Enum('TO', 'CC', 'BCC', name='recipienttype'),
               type_=sa.VARCHAR(length=10),
               nullable=False,
               existing_comment='수신자 타입')
        batch_op.alter_column('recipient_uuid',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_comment='수신자 UUID',
               existing_nullable=False)
        batch_op.alter_column('mail_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               comment='수신자 고유 ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_logs', schema=None) as batch_op:
        batch_op.create_table_comment(
        'mail_logs',
        '메일 로그 모델',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_mail_logs_id'))
        batch_op.create_index('ix_mail_logs_user_uuid', ['user_uuid'], unique=False)
        batch_op.create_index('ix_mail_logs_mail_id', ['mail_id'], unique=False)
        batch_op.create_index('ix_mail_logs_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_mail_logs_action', ['action'], unique=False)

    with op.batch_alter_table('mail_in_folders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='사용자 ID'))
        batch_op.create_table_comment(
        'mail_in_folders',
        '메일-폴더 관계 모델',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_in_folders_mail_id_fkey', 'mails', ['mail_id'], ['id'])
        batch_op.create_foreign_key('mail_in_folders_user_id_fkey', 'mail_users', ['user_id'], ['id'])
        batch_op.create_index('ix_mail_in_folders_mail_id', ['mail_id'], unique=False)
        batch_op.create_index('ix_mail_in_folders_folder_id', ['folder_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('mail_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               comment='관계 고유 ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_folders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('folder_uuid', sa.VARCHAR(length=36), autoincrement=False, nullable=True, comment='폴더 UUID'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_folders_user_id_fkey', 'mail_users', ['user_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_mail_folders_user_id'))
        batch_op.create_index('ix_mail_folders_folder_uuid', ['folder_uuid'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_comment='수정 시간',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('folder_type',
               existing_type=sa.Enum('INBOX', 'SENT', 'DRAFT', 'TRASH', 'CUSTOM', name='foldertype'),
               type_=sa.VARCHAR(length=20),
               nullable=False,
               comment='폴더 타입 (inbox, sent, draft, trash, custom)',
               existing_comment='폴더 타입')
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_comment='사용자 ID',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               comment='폴더 고유 ID',
               existing_comment='폴더 ID',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('mail_attachments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_inline', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='인라인 첨부 여부'))
        batch_op.create_table_comment(
        'mail_attachments',
        '메일 첨부파일 모델',
        existing_comment=None,
        schema=None
    )
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mail_attachments_mail_id_fkey', 'mails', ['mail_id'], ['id'])
        batch_op.create_index('ix_mail_attachments_mail_id', ['mail_id'], unique=False)
        batch_op.create_index('ix_mail_attachments_id', ['id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               server_default=None,
               type_=postgresql.TIMESTAMP(),
               existing_comment='생성 시간',
               existing_nullable=True)
        batch_op.alter_column('content_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=False,
               existing_comment='콘텐츠 타입')
        batch_op.alter_column('mail_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_comment='메일 ID',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               comment='첨부파일 고유 ID',
               existing_nullable=False)

    with op.batch_alter_table('login_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_login_logs_id'))
        batch_op.create_index('idx_login_logs_user_uuid', ['user_uuid'], unique=False)
        batch_op.create_index('idx_login_logs_email', ['email'], unique=False)
        batch_op.create_index('idx_login_logs_created_at', ['created_at'], unique=False)

    # ### end Alembic commands ###


def validate_saas_constraints() -> None:
    """
    SaaS 제약 조건 검증
    
    마이그레이션 후 다음 사항을 확인합니다:
    - 조직별 데이터 격리 유지
    - 외래 키 제약 조건 유효성
    - 인덱스 성능 최적화
    """
    # 구현 필요시 여기에 검증 로직 추가
    pass


def backup_critical_data() -> None:
    """
    중요 데이터 백업
    
    마이그레이션 전 중요한 데이터를 백업합니다.
    조직별로 분리된 백업을 생성하여 데이터 격리를 유지합니다.
    """
    # 구현 필요시 여기에 백업 로직 추가
    pass